server:
  port: 8082
  servlet:
    context-path: /expenses

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: expense-service
  datasource:
    url: jdbc:mysql://localhost:3307/sems_expense
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
  flyway:
    enabled: false
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: expense:com.sems.expense.adapter.out.messaging.event.ExpenseEvent
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.sems.expense.adapter.out.messaging.event
  config:
    import: optional:configserver:http://localhost:8888
  cloud:
    config:
      enabled: true
      uri: http://localhost:8888
      fail-fast: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: true
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 10

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

app:
  security:
    jwt:
      secret-key: ${JWT_SECRET:40fbac53d58e632139f772cb2458f9a1c6c33465bcf832825cb22c9741f96fc3}
      token-expiration-ms: 86400000 # 24 hours
  kafka:
    topics:
      expense-event: expense-events

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method 